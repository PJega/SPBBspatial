{
    "collab_server" : "",
    "contents" : "#' Saddlepoint-Based Bootstrap (SPBB) Inference for Spatial Dependence Parameter\n#'\n#' Saddlepoint-Based Bootstrap (SPBB) Inference for Spatial Dependence Parameter in\n#' the Spatial Regression Models such as Simultaneous Autoregressive (SAR) Model,\n#' Conditional Autoregressive (CAR) Model, and Simultaneous Moving Average (SMA) Model.\n#'\n#' @param formula regression formula in R\n#' @param data list containing\n#' @param nbw see \\code{poly2nb}\n#' @param family either 'SAR', or 'CAR', or 'SMA'\n#' @param mn.r minimum value of spatial dependence parameter for the SMA model\n#' @param mx.r maximum value of spatial dependence parameter for the SMA model\n#' @return A list of coefficients of the spatial regression covariates and the confidence interval for the spatial dependence parameter\n#' @author Pratheepa Jeganathan\n#' @details This function takes the regression formula, weight matrix, and the name of the spatial\n#' regression model (SAR, CAR, SMA) and calculates the spatial correlated residuals from the \\code{spautolm}.\n#' Then, this function returns the confidence interval for the spatial dependence\n#' parameter using the SPBB method.\n#' @seealso \\code{spautolm}\n#' @export\n#' @source SAR_SPBB.R\n#' @source CAR_SPBB.R\n#' @source SMA_SPBB.R\n\n\n#library(spdep)\n#source('./R/SAR_SPBB.R')\n#source('./R/CAR_SPBB.R')\n#source('./R/SMA_SPBB.R')\nSPBBspatial<-function(formula, data = list(), nbw, family='SAR',mn.r=-.9,mx.r=.9){\n    #nbw:readPolyshap->poly2nb() should be nbw\n\n        if(family=='SAR'){\n                listw=nb2listw(nbw, style=\"W\")\n                sarfit=spautolm(formula=formula, data=data, listw=listw,family=family)\n                betahat=matrix(sarfit$fit$coefficients,nrow= length(sarfit$fit$coefficients),ncol=1)\n                mt <- terms(formula, data = data)\n                mf <- lm(formula, data,method = \"model.frame\")\n                y <- model.response(mf, \"numeric\")\n                if (any(is.na(y))) stop(\"NAs in dependent variable\")\n                X<- model.matrix(mt, mf)\n                if (any(is.na(X)))\n                    stop(\"NAs in independent variable\")\n                if (NROW(X) != length(listw$neighbours))\n                    stop(\"Input data and neighbourhood list have different dimensions\")\n\n                zhat=y-X%*%betahat\n                W=nb2mat(nbw,style=\"W\")\n                z=as.vector(zhat)\n                res=list(fit.s=summary(sarfit),SPBB=ConfidenceIntervalSAR(zhat,n=length(y),W=W))\n                return(res)\n        }else if(family=='CAR'){\n            listw=nb2listw(nbw, style=\"B\")\n            sarfit=spautolm(formula=formula, data=data, listw=listw,family=family)\n            betahat=matrix(sarfit$fit$coefficients,nrow= length(sarfit$fit$coefficients),ncol=1)\n            mt <- terms(formula, data = data)\n            mf <- lm(formula, data,method = \"model.frame\")\n            y <- model.response(mf, \"numeric\")\n            if (any(is.na(y))) stop(\"NAs in dependent variable\")\n            X<- model.matrix(mt, mf)\n            if (any(is.na(X)))\n                stop(\"NAs in independent variable\")\n            if (NROW(X) != length(listw$neighbours))\n                stop(\"Input data and neighbourhood list have different dimensions\")\n\n            zhat=y-X%*%betahat\n            W=nb2mat(nbw,style=\"B\")\n            z=as.vector(zhat)\n            res=list(fit.s=summary(sarfit),SPBB=ConfidenceIntervalCAR(zhat,n=length(y),W=W))\n            return(res)\n        }else if(family=='SMA'){\n            listw=nb2listw(nbw, style=\"W\")\n            sarfit=spautolm(formula=formula, data=data, listw=listw,family=family)\n            betahat=matrix(sarfit$fit$coefficients,nrow= length(sarfit$fit$coefficients),ncol=1)\n            mt <- terms(formula, data = data)\n            mf <- lm(formula, data,method = \"model.frame\")\n            y <- model.response(mf, \"numeric\")\n            if (any(is.na(y))) stop(\"NAs in dependent variable\")\n            X<- model.matrix(mt, mf)\n            if (any(is.na(X)))\n                stop(\"NAs in independent variable\")\n            if (NROW(X) != length(listw$neighbours))\n                stop(\"Input data and neighbourhood list have different dimensions\")\n\n            zhat=y-X%*%betahat\n            W=nb2mat(nbw,style=\"W\")\n            z=as.vector(zhat)\n            res=list(fit.s=summary(sarfit),SPBB=ConfidenceIntervalSMA(zhat,n=length(y),W=W,mn.r=mn.r,mx.r=mx.r))\n            return(res)\n        }\n}\n#source this file\n#SPBBspatial(A ~ towns + pale, data=eire, eire.nb,family='SAR')\n",
    "created" : 1467987715472.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4002678300",
    "id" : "87F67D9E",
    "lastKnownWriteTime" : 1467990305,
    "last_content_update" : 1467990305881,
    "path" : "C:/Users/Pratheepa/Dropbox/47_MyProjectsForPhD/SPBBSpatial/R/SPBBspatial.R",
    "project_path" : "R/SPBBspatial.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_source"
}